}
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution
data
))
}
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution
data
))
}
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution,
data
))
}
A <- fit_distribution("weibull", IPD_GemOS_Colluci)
A
View(A)
class(A$Model)
A <- fit_distribution(c("weibull", "gamma"), IPD_GemOS_Colluci)
A
View(A)
A$Model[1]
renv::status
renv::status()
renv::snapshot()
library(dplyr)
renv::snapshot()
library(dplyr)
renv::snapshot()
library(dplyr)
renv::snapshot()
library(dplyr)
renv::snapshot()
View(models[[2]][[1]])
models[[2]][[1]][["AIC"]]
B
models <- fit_distribution(dists, IPD_GemOS_Colluci)
library(flexsurv)
library(dplyr)
dists <- c("exponential",
"gengamma",
"weibull",
"lognormal",
"gamma",
"gengamma")
models <- fit_distribution(dists, IPD_GemOS_Colluci)
models$Model["AIC"]
models$Model$AIC
View(models[[2]][[1]])
models[[2]][[1]][["AIC"]]
models$Model[["AIC"]]
models$Model[['AIC']]
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution,
data
)) %>% mutate(
AIC = .data[["AIC"]]
)
}
models <- fit_distribution(dists, IPD_GemOS_Colluci)
models <- fit_distribution(dists, IPD_GemOS_Colluci)
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution,
data
)) %>% mutate(
AIC = .x$Model[["AIC"]]
)
}
models <- fit_distribution(dists, IPD_GemOS_Colluci)
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution,
data
))
df$AIC <- Model[["AIC"]]
}
models <- fit_distribution(dists, IPD_GemOS_Colluci)
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution,
data
))
df$AIC <- df$Model[["AIC"]]
}
models <- fit_distribution(dists, IPD_GemOS_Colluci)
models
fit_distribution <- function(distributions, data){
df <- data.frame(Distributions = distributions)
df <- df %>%
mutate(Model = purrr::map(
Distributions,
.fit_distribution,
data
))
df$AIC <- df$Model[["AIC"]]
df
}
models <- fit_distribution(dists, IPD_GemOS_Colluci)
View(df)
View(models)
models <- fit_distribution(dists, IPD_GemOS_Colluci)
models
View(models)
models[[2]][[1]][["opt"]]
models[[2]][[1]][["data"]][["mml"]][["rate"]]
models[[2]][[1]][["data"]][["m"]]
models[[2]][[1]][["res"]]
install.packages("gamlss")
library(gamlss)
?bfg
?gamlss::bfp
library(gamlss)
abdom
load(abdom)
View(abdom)
library(ggplot2)
ggplot(data = abdom) +
geom_point(aes(x = x, y = y))
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(method = "lm")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
geom_smooth(method = "lm")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(formula = y~x, method = "lm")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y) method = "lm")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm") +
geom_ribbon()
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm")
?abdom
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EABBE")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91")
?abdom
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
mod1 <- gamlss(y~bfp(c, c(1,2)), data = abdom)
mod1 <- gamlss(y~bfp(x, c(1,2)), data = abdom)
View(mod1)
install.packages("gamlss.ggplots")
library(gamlss.ggplots)
?gamlss.ggplots
mod1 <- gamlss(y~bfp(x, c(1,2)), data = abdom)
View(mod1)
plot(mod1)
data(aids)
a<-gamlss(y~pb(x)+qrt,data=aids,family=NBI)
registerDoParallel(cores = 2)
B1 <- BayesianBoot(a, B=100)
stopImplicitCluster()
boot_coef(B1)
class(mod1)
?stat_smooth
?plot.gamlss
summary(m1)
summary(mod1)
mod1 <- gamlss(y~bfp(x, c(-0.5,1,2)), data = abdom)
summary(mod1)
data(aids)
a<-gamlss(y~pb(x)+qrt,data=aids,family=NBI)
fitted_terms(a, pages=1)
data(aids)
a<-gamlss(y~pfb(x, c(1,2))+qrt,data=aids,family=NBI)
a<-gamlss(y~bfp(x, c(1,2))+qrt,data=aids,family=NBI)
fitted_terms(a, pages=1)
fitted_terms(a, pages=2)
fitted_terms(a, pages=0)
a <- gamlss(y~bfp(x, c(1,2))+qrt,data=aids,family=NBI)
?fitted_terms
fitted_terms(a)
a <- gamlss(y~bfp(x, c(1,2))+qrt,data = aids,family = NBI)
a <- gamlss(y~bfp(x, c(-0.5,1,2))+qrt,data = aids,family = NBI)
fitted_terms(a)
a <- gamlss(y~bfp(x, c(-0.5,1,2)),data = aids)
fitted_terms(a)
a <- gamlss(y~bfp(x, c(-0.5,1)),data = aids)
fitted_terms(a)
a <- gamlss(y~bfp(x, c(-2,1)),data = aids)
fitted_terms(a)
a <- gamlss(y~bfp(x, c(-2,1)),data = adom)
a <- gamlss(y~bfp(x, c(-2,1)),data = abdom)
fitted_terms(a)
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
fitted_terms(mod1) +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence") +
fitted_terms(mod1)
ggplot(data = abdom) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
mod1 <- gamlss(y~bfp(x, c(-0.5,1,2)), data = abdom)
a <- gamlss(y~bfp(x, c(-2,1)),data = abdom)
fitted_terms(a) + geom_point(data = abdom, aes(x = x, y =y))
fitted_terms(a) + geom_point(data = abdom, aes(x = x, y = y))
ggplot() +
fitted_terms(a) + geom_point(data = abdom, aes(x = x, y = y))
ggplot() +
fitted_terms(a, geom_point(data = abdom, aes(x = x, y = y)))
ggplot() +
fitted_terms(a, data = abdom, aes(x = x, y = y)))
ggplot() +
fitted_terms(a, data = abdom, aes(x = x, y = y))
fitted_terms(a, data = abdom, aes(x = x, y = y))
fitted_terms(a, data = abdom)
a <- gamlss(y~bfp(x, c(-2,1)),data = abdom)
a <- gamlss(y~bfp(x, c(-3,1)),data = abdom)
a <- gamlss(y~bfp(x, c(0,1)), data = abdom)
fitted.values(a)
fitted_values(a)
mod1 <- gamlss(y~bfp(x, c(-0.5,1,2)), data = abdom)
fitted_terms(mod1)
fitted_terms(mod1) + ylim(c(0, 100))
class(fitted_terms(mod1))
fitted_terms(mod1)
?bfp
fp_model <- galmss(y~bfp(x,c(1,0.5)), data = abdom)
fp_model <- gamlss(y~bfp(x,c(1,0.5)), data = abdom)
plot(fp_model$df.fit)
plot(fp_model)
?plot.gamlss
plot(fp_model, x = abdom$x)
plot(fp_model, x = x)
plot(fp_model, x = "x")
plot(fp_model)
rm(fp_model)
fp_model <- gamlss(y~bfp(x,c(1,0.5)), data = abdom)
plot(fp_model)
plot(y~x,data=abdom)
fitted(fp_model)
df <- abdom
df <- abdom %>%
mutate(fp = fitted(fp_model))
library(dplyr)
df <- abdom %>%
mutate(fp = fitted(fp_model))
df
ggplot(data = df) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
geom_line(aes(x = x, y = fp_model)) +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
df$\
length(df$y)
length(df$fp)
length(df$x)
ggplot(data = df) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
geom_line(aes(x = x, y = fp)) +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
ggplot(data = df) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
geom_line(aes(x = x, y = fp), color = "#b17ebe") +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
ggplot(data = df) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
geom_line(aes(x = x, y = fp), color = "#b17ebe", linewidth = 5) +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
ggplot(data = df) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
geom_line(aes(x = x, y = fp), color = "#b17ebe", linewidth = 2) +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
ggplot(data = df) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91") +
geom_line(aes(x = x, y = fp), color = "#b17ebe", linewidth = 1.5) +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
ggplot(data = df) +
geom_point(aes(x = x, y = y)) +
stat_smooth(aes(x = x, y = y), method = "lm", color = "#7EBE91", linewidth = 1.5) +
geom_line(aes(x = x, y = fp), color = "#b17ebe", linewidth = 1.5) +
labs(title = "Abdominal Circumfrence in Fetus Ultrasound Scans",
x = "Gestational age",
y = "Abdominal circumfrence")
plot_km <- function(fit, break.x.by = 6){
if (!inherits(fit, "survfit")) {
rlang::abort("fit object is not of class 'survfit'")
}
ggsurvfit::ggsurvfit(
fit,
type = "survival"
) + ggsurvfit::add_censor_mark() +
ggsurvfit::add_risktable(
risktable_stats = "n.risk"
) + ggplot2::scale_x_continuous(breaks = seq(0,max(fit$time),break.x.by))
}
km_estimates <- function(TTE){
out <- ggsurvfit::survfit2(
survival::Surv(
time = time,
event = status,
type = "right"
) ~ 1, data = TTE)
}
A <- km_estimates(IPD_GemOS_Colluci)
plot_km(A)
B <- .fit_distribution("weibull", IPD_GemOS_Colluci)
library(flexsurv)
B <- .fit_distribution("weibull", IPD_GemOS_Colluci)
B
plot(B)
fitted(B)
summary(B)
km_estimates(IPD_GemOS_Colluci)
A
summary(A)
summary(A)
summary(A)$survival
A$surv
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)$time, km = km$surv, fitted = summary(fit)$est)
}
C <- plot_fitted_distribution(B, A)
A$surv
summary(B)$est
summary(B)
class(summary(B))
.extract_survival(B)
S <- summary(B)
View(S)
S[[1]]$est
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)$time, km = km$surv, fitted = summary(fit)[[1]]$est)
}
C <- plot_fitted_distribution(B, A)
summary(B)$fit
summary(B)$time
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
}
C <- plot_fitted_distribution(B, A)
C
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km))
p
}
C
C <- plot_fitted_distribution(B, A)
C
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#7EABBE")
p
}
C <- plot_fitted_distribution(B, A)
C
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#7EBE91")
p
}
C <- plot_fitted_distribution(B, A)
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#7EABBE")
p
}
C <- plot_fitted_distribution(B, A)
C
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#7EABBE")
p
}
C <- plot_fitted_distribution(B, A)
C
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "green")
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "green")
p
}
C <- plot_fitted_distribution(B, A)
C
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#b17ebe")
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#b17ebe")
p
}
C <- plot_fitted_distribution(B, A)
C
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#7EBE91")
p
}
C <- plot_fitted_distribution(B, A)
C
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#7EBE91", linewidth = 1.5)
p
}
C <- plot_fitted_distribution(B, A)
C
plot_fitted_distribution <- function(fit, km){
df <- data.frame(time = summary(fit)[[1]]$time, km = km$surv, fitted = summary(fit)[[1]]$est)
p <- ggplot(data = df) +
geom_line(aes(x = time, y = km)) +
geom_line(aes(x = time, y = fitted), color = "#7EBE91", linewidth = 1.5) +
labs(x = "Time", y = "Survival")
p
}
C <- plot_fitted_distribution(B, A)
C
library(flexsurv)
?flexsurvreg
?flexsurv.dists
install.packages()
install.packages("hesim")
