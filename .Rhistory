study = Study,
trt = Treatment,
y = Value
)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
r = Value
)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
N = Value
)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
n = Value
)
?set_agd_contrast
PFS_Net <- set_agd_contrast(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value,
se = sqrt(abs(Value))/2
)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value,
se = sqrt(abs(Value))/2
)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value,
se = sqrt(abs(Value))/12
)
plot(PFS_Net)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value,
se = sqrt(abs(Value))/12,
sample_size = 12
)
View(Colucci_PFS_GEMCIS_Models)
View(lnorm_coeffs)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value
)
PFS_Net <- set_agd_arm(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value,
se = sqrt(abs(Value))/12
)
PFS_Net
?set_agd_arm
?set_ipd
PFS_Net <- set_ipd(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value
)
plot(PFS_Net)
PFSNMA_Fixed <- nma(
PFS_Net,
trt_effects = "Fixed"
)
PFSNMA_Fixed <- nma(
PFS_Net,
trt_effects = "fixed"
)
plot(PFSNMA_Fixed)
PFSNMA_Fixed <- nma(
PFS_Net,
trt_effects = "fixed",
link = "log"
)
PFSNMA_Fixed <- nma(
PFS_Net,
trt_effects = "fixed"
)
library(multinma)
devtools::load_all()
save_nma_summary(PFSNMA_Fixed, "PFS", "fixed", "parametric")
dic(PFSNMA_Fixed)
plot_prior_posterior(PFSNMA_Fixed)
gc()
library(openxlsx)
library(dplyr)
library(PCNMA)
library(multinma)
library(forestploter)
# Load PFS Data
PFS_IPD <- read.xlsx("Data/IPD/IPD_PFS_Master.xlsx") |>
mutate(status = ifelse(censored == TRUE, 0, 1)) |>
rename(Study = study)
Conroy_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Conroy", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Conroy_PFS_FOL_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Conroy", treatment == "FOL"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Colucci_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Colucci", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Colucci_PFS_GEMCIS_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Colucci", treatment == "GEMCIS"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Kindler_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Kindler", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Kindler_PFS_GEMAXI_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Kindler", treatment == "GEMAXI"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Reni_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Reni", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Reni_PFS_PEFG_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Reni", treatment == "PEFG"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
RochaLima_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Rocha-Lima", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
RochaLima_PFS_GEMIRI_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Rocha-Lima", treatment == "GEMIRI"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Cunningham_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Cunningham", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Cunningham_PFS_GEMCAP_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Cunningham", treatment == "GEMCAP"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
devtools::load_all()
Conroy_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Conroy", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Conroy_PFS_FOL_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Conroy", treatment == "FOL"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Colucci_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Colucci", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Colucci_PFS_GEMCIS_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Colucci", treatment == "GEMCIS"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Kindler_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Kindler", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Kindler_PFS_GEMAXI_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Kindler", treatment == "GEMAXI"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Reni_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Reni", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Reni_PFS_PEFG_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Reni", treatment == "PEFG"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
RochaLima_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Rocha-Lima", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
RochaLima_PFS_GEMIRI_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Rocha-Lima", treatment == "GEMIRI"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Cunningham_PFS_GEM_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Cunningham", treatment == "GEM"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
Cunningham_PFS_GEMCAP_Models <- fit_distribution(nice_parametric_dists, PFS_IPD |> filter(
Study == "Cunningham", treatment == "GEMCAP"
)) |> mutate(AIC = round(purrr::map_dbl(Model, .get_attribute, "AIC"), 2))
plot.fitted_distribution(Conroy_PFS_GEM_Models, km = TRUE) +
labs(x = "Time (Months)", y = "Progression Free Survival")
library(ggplot2)
plot.fitted_distribution(Conroy_PFS_GEM_Models, km = TRUE) +
labs(x = "Time (Months)", y = "Progression Free Survival")
Coefficients <- bind_rows(
save_coefficients(Conroy_PFS_FOL_Models, "Conroy", "FOL"),
save_coefficients(Conroy_PFS_GEM_Models, "Conroy", "GEM"),
save_coefficients(Kindler_PFS_GEM_Models, "Kindler", "GEM"),
save_coefficients(Kindler_PFS_GEMAXI_Models, "Kindler", "GEMAXI"),
save_coefficients(Reni_PFS_GEM_Models, "Reni", "GEM"),
save_coefficients(Reni_PFS_PEFG_Models, "Reni", "PEFG"),
save_coefficients(RochaLima_PFS_GEM_Models, "Rocha-Lima", "GEM"),
save_coefficients(RochaLima_PFS_GEMIRI_Models, "Rocha-Lima", "GEMIRI"),
save_coefficients(Colucci_PFS_GEM_Models, "Colucci", "GEM"),
save_coefficients(Colucci_PFS_GEMCIS_Models, "Colucci", "GEMCIS"),
save_coefficients(Cunningham_PFS_GEM_Models, "Cunningham", "GEM"),
save_coefficients(Cunningham_PFS_GEMCAP_Models, "Cunningham", "GEMCAP")
)
View(Coefficients)
PFS_Net <- set_ipd(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value,
iter = 5000
)
PFS_Net <- set_ipd(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value
)
lnorm_coeffs <- Coefficients |> filter(Distribution == "Log-normal") |>
mutate(lcl = Value - sqrt(abs(Value))/12) |>
mutate(ucl = Value + sqrt(abs(Value))/12)
PFS_Net <- set_ipd(
data = lnorm_coeffs,
study = Study,
trt = Treatment,
y = Value
)
PFSNMA_Fixed <- nma(
PFS_Net,
trt_effects = "fixed",
iter = 5000
)
save_nma_summary(PFSNMA_Fixed, "PFS", "fixed", "parametric")
summary(PFSNMA_Fixed)
test <- summary(PFSNMA_Fixed)
View(test)
test <- summary(PFSNMA_Fixed)
View(test)
View(test[["summary"]])
PFSNMA_Fixed[["Summary"]]
summary(PFSNMA_Fixed)[["Summary"]]
summary(PFSNMA_Fixed)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)["Summary"]
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["Summary"]]
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]]
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter("d[" %in% parameter)
View(test)
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]]
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect("d[", parameter))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect("d["))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect(pattern = "d["))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect(string = parameter, pattern = "d["))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect(string = parameter, pattern = "d[]"))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect(string = parameter, pattern = "d\[\]"))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect(string = parameter, pattern = "d\[\]"))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect(string = parameter, pattern = "\[\]"))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(stringr::str_detect(string = parameter, pattern = "d"))
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu") |
!stringr::str_detect(string = parametr, pattern = "sigma"))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]]
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu") |
!stringr::str_detect(string = parameter, pattern = "sigma"))
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu") |
!stringr::str_detect(string = parameter, pattern = "sigma"))
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu"), !stringr::str_detect(string = parameter, pattern = "sigma"))
View(PFSNMA_Fixed_summary)
PFSNMA_Fixed_Forest_plot <- ggplot(PSNMA_Fixed_summary) +
()
PFSNMA_Fixed_Forest_plot <- ggplot(PSNMA_Fixed_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "sdlog",
y = "Study"
)
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu"), !stringr::str_detect(string = parameter, pattern = "sigma"))
PFSNMA_Fixed_Forest_plot <- ggplot(PSNMA_Fixed_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "sdlog",
y = "Study"
)
PFSNMA_Fixed_Forest_plot <- ggplot(PFSNMA_Fixed_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "sdlog",
y = "Study"
)
PFSNMA_Fixed_Forest_plot
PFSNMA_Fixed_Forest_plot <- ggplot(PFSNMA_Fixed_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
PFSNMA_Fixed_Forest_plot
PFSNMA_Random <- nma(
PFS_Net,
trt_effects = "random",
iter = 5000
)
save_nma_summary(PFSNMA_Random, "PFS", "random", "parametric")
PFSNMA_Random_summary <- summary(PFSNMA_Random)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu"), !stringr::str_detect(string = parameter, pattern = "sigma"))
PFSNMA_Random_Forest_plot <- ggplot(PFSNMA_Random_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forrest_Random.png",
width = 7, height = 7, units = "in")
PFSNMA_Random_Forest_plot
PFSNMA_Random_summary
View(PFSNMA_Random_summary)
DIC(PFSNMA_Fixed)
dic(PFSNMA_Fixed)
test <- dic(PFSNMA_Fixed)
View(test)
test2 <- dic(PFSNMA_Random)
View(test2)
test2$dic
data.frame(model = c("Fixed", "Random"), pd = c(dic(PFSNMA_Fixed)$pd, dic(PFSNMA_Random)$pd))
data.frame(model = c("Fixed", "Random"),
dic = c(dic(PFSNMA_Fixed)$dic, dic(PFSNMA_Random)$dic),
pd = c(dic(PFSNMA_Fixed)$pd, dic(PFSNMA_Random)$pd),
resdev = c(dic(PFSNMA_Fixed)$resdev), dic(PFSNMA_Random)$resdev)
resdev = c(dic(PFSNMA_Fixed)$resdev, dic(PFSNMA_Random)$resdev)
data.frame(model = c("Fixed", "Random"),
dic = c(dic(PFSNMA_Fixed)$dic, dic(PFSNMA_Random)$dic),
pd = c(dic(PFSNMA_Fixed)$pd, dic(PFSNMA_Random)$pd),
resdev = c(dic(PFSNMA_Fixed)$resdev, dic(PFSNMA_Random)$resdev))
write.xlsx(x = list(model_stats),
file = "/home/matthew/Documents/MScThesis/Results/Models/PFS/PFS_Model_Stats.xlsx")
model_stats <- data.frame(model = c("Fixed", "Random"),
dic = c(dic(PFSNMA_Fixed)$dic, dic(PFSNMA_Random)$dic),
pd = c(dic(PFSNMA_Fixed)$pd, dic(PFSNMA_Random)$pd),
resdev = c(dic(PFSNMA_Fixed)$resdev, dic(PFSNMA_Random)$resdev))
write.xlsx(x = list(model_stats),
file = "/home/matthew/Documents/MScThesis/Results/Models/PFS/PFS_Model_Stats.xlsx")
PFSNMA_Fixed
lnorm_coeffs
View(lnorm_coeffs)
PFSNMA_Fixed_Forest_plot <- ggplot(PFSNMA_Fixed_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forrest_Fixed.png",
width = 7, height = 7, units = "in")
PFSNMA_Random_Forest_plot <- ggplot(PFSNMA_Random_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forrest_Random.png",
width = 7, height = 7, units = "in")
PFSNMA_Fixed_Forest_plot <- ggplot(PFSNMA_Fixed_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forest_Fixed.png",
width = 7, height = 7, units = "in")
PFSNMA_Random_summary <- summary(PFSNMA_Random)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu"), !stringr::str_detect(string = parameter, pattern = "sigma"))
PFSNMA_Random_Forest_plot <- ggplot(PFSNMA_Random_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forest_Random.png",
width = 7, height = 7, units = "in")
View(PFSNMA_Random_Forest_plot)
View(PFSNMA_Random_summary)
exp(0.244)
PFSNMA_Random_summary <- summary(PFSNMA_Random)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu"), !stringr::str_detect(string = parameter, pattern = "sigma"), !stringr::str_detect(string = parameter, pattern = "delta"))
PFSNMA_Random_Forest_plot <- ggplot(PFSNMA_Random_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forest_Random.png",
width = 7, height = 7, units = "in")
PFSNMA_Fixed <- nma(
PFS_Net,
trt_effects = "fixed",
iter = 30000
)
save_nma_summary(PFSNMA_Fixed, "PFS", "fixed", "parametric")
PFSNMA_Fixed_summary <- summary(PFSNMA_Fixed)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu"), !stringr::str_detect(string = parameter, pattern = "sigma"))
PFSNMA_Fixed_Forest_plot <- ggplot(PFSNMA_Fixed_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forest_Fixed.png",
width = 7, height = 7, units = "in")
# Random effects
PFSNMA_Random <- nma(
PFS_Net,
trt_effects = "random",
iter = 30000
)
save_nma_summary(PFSNMA_Random, "PFS", "random", "parametric")
PFSNMA_Random_summary <- summary(PFSNMA_Random)[["summary"]] |>
filter(!stringr::str_detect(string = parameter, pattern = "mu"), !stringr::str_detect(string = parameter, pattern = "sigma"), !stringr::str_detect(string = parameter, pattern = "delta"))
PFSNMA_Random_Forest_plot <- ggplot(PFSNMA_Random_summary) +
geom_point(aes(x = mean - sd, y = reorder(parameter, mean)), size = 0.5) +
geom_point(aes(x = mean + sd, y = reorder(parameter, mean)), size = 0.5) +
geom_segment(aes(x = mean - sd, xend = mean + sd, y = reorder(parameter, mean),
yend = reorder(parameter, mean)),
color = colours$purple) +
geom_point(aes(x = mean, y = reorder(parameter, mean)), shape = 4) +
labs(
x = "mean",
y = "Study"
)
ggsave("/home/matthew/Documents/MScThesis/Results/Models/PFS/Forest_Random.png",
width = 7, height = 7, units = "in")
# Overall summaries
model_stats <- data.frame(model = c("Fixed", "Random"),
dic = c(dic(PFSNMA_Fixed)$dic, dic(PFSNMA_Random)$dic),
pd = c(dic(PFSNMA_Fixed)$pd, dic(PFSNMA_Random)$pd),
resdev = c(dic(PFSNMA_Fixed)$resdev, dic(PFSNMA_Random)$resdev))
write.xlsx(x = list(model_stats),
file = "/home/matthew/Documents/MScThesis/Results/Models/PFS/PFS_Model_Stats.xlsx")
